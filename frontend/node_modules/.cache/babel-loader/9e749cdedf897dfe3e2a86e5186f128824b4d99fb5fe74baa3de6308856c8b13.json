{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Igna\\\\Documents\\\\GitHub\\\\Speckle\\\\frontend\\\\src\\\\DefaultValuesManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DescriptorSelection from './DescriptorSelection';\nimport Modal from 'react-modal';\n\n// Asegúrate de llamar a Modal.setAppElement en algún lugar para accesibilidad\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst DefaultValuesManager = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [defaultValues, setDefaultValues] = useState({});\n  const [descriptorList, setDescriptorList] = useState([]);\n\n  // Cargar datos del JSON al iniciar el componente\n  useEffect(() => {\n    fetch('/api/descriptors').then(response => response.json()).then(data => {\n      setDefaultValues(data.defaultValues);\n      setDescriptorList(data.descriptorList);\n    }).catch(error => console.error('Error al cargar los descriptores:', error));\n  }, []);\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  const handleSaveDefaultValues = newDefaultValues => {\n    setDefaultValues(newDefaultValues);\n    toggleModal();\n\n    // Hacer la solicitud al backend para guardar los nuevos valores\n    fetch('/api/descriptors', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        defaultValues: newDefaultValues,\n        descriptorList\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Éxito:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleModal,\n      children: \"Actualizar valores por defecto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Modificar valores por defecto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DescriptorSelection, {\n        descriptorList: descriptorList,\n        defaultValues: defaultValues,\n        onSave: handleSaveDefaultValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleModal,\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(DefaultValuesManager, \"tq1UONs0mfN4h/0fVMHTa/fqtjo=\");\n_c = DefaultValuesManager;\nexport default DefaultValuesManager;\nvar _c;\n$RefreshReg$(_c, \"DefaultValuesManager\");","map":{"version":3,"names":["React","useState","useEffect","DescriptorSelection","Modal","jsxDEV","_jsxDEV","setAppElement","DefaultValuesManager","_s","isModalOpen","setIsModalOpen","defaultValues","setDefaultValues","descriptorList","setDescriptorList","fetch","then","response","json","data","catch","error","console","toggleModal","handleSaveDefaultValues","newDefaultValues","method","headers","body","JSON","stringify","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","onSave","_c","$RefreshReg$"],"sources":["C:/Users/Igna/Documents/GitHub/Speckle/frontend/src/DefaultValuesManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DescriptorSelection from './DescriptorSelection';\r\nimport Modal from 'react-modal';\r\n\r\n// Asegúrate de llamar a Modal.setAppElement en algún lugar para accesibilidad\r\nModal.setAppElement('#root');\r\n\r\nconst DefaultValuesManager = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [defaultValues, setDefaultValues] = useState({});\r\n    const [descriptorList, setDescriptorList] = useState([]);\r\n\r\n    // Cargar datos del JSON al iniciar el componente\r\n    useEffect(() => {\r\n        fetch('/api/descriptors')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setDefaultValues(data.defaultValues);\r\n                setDescriptorList(data.descriptorList);\r\n            })\r\n            .catch(error => console.error('Error al cargar los descriptores:', error));\r\n    }, []);\r\n\r\n    const toggleModal = () => {\r\n        setIsModalOpen(!isModalOpen);\r\n    };\r\n\r\n    const handleSaveDefaultValues = (newDefaultValues) => {\r\n        setDefaultValues(newDefaultValues);\r\n        toggleModal();\r\n\r\n        // Hacer la solicitud al backend para guardar los nuevos valores\r\n        fetch('/api/descriptors', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ defaultValues: newDefaultValues, descriptorList }),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Éxito:', data);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={toggleModal}>Actualizar valores por defecto</button>\r\n            <Modal isOpen={isModalOpen} onRequestClose={toggleModal}>\r\n                <h2>Modificar valores por defecto</h2>\r\n                <DescriptorSelection \r\n                    descriptorList={descriptorList} \r\n                    defaultValues={defaultValues} \r\n                    onSave={handleSaveDefaultValues} \r\n                />\r\n                <button onClick={toggleModal}>Cerrar</button>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DefaultValuesManager;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}