{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Igna\\\\Documents\\\\GitHub\\\\Speckle\\\\frontend\\\\src\\\\subirVideos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport DescriptorSelection from './DescriptorSelection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadVideo = () => {\n  _s();\n  const [video, setVideo] = useState(null);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [imageUrls, setImageUrls] = useState([]);\n  const [selectedDescriptors, setSelectedDescriptors] = useState({});\n  const [descriptorsVisible, setDescriptorsVisible] = useState(false);\n  const [descriptorParams, setDescriptorParams] = useState({});\n  const handleFileChange = event => {\n    setVideo(event.target.files[0]);\n    setDescriptorsVisible(true);\n  };\n  const handleDescriptorChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setSelectedDescriptors(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n    if (checked && defaultValues[name]) {\n      setDescriptorParams(prev => ({\n        ...prev,\n        [name]: defaultValues[name]\n      }));\n    } else if (!checked) {\n      setDescriptorParams(prev => ({\n        ...prev,\n        [name]: {}\n      }));\n    }\n  };\n  const handleParamChange = (descriptor, param, value) => {\n    setDescriptorParams(prev => ({\n      ...prev,\n      [descriptor]: {\n        ...prev[descriptor],\n        [param]: value\n      }\n    }));\n  };\n  const handleUpload = async () => {\n    if (!video) {\n      setMessage('Por favor, selecciona un video.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('video', video);\n    const descriptors = Object.keys(selectedDescriptors).filter(key => selectedDescriptors[key]);\n    formData.append('descriptors', JSON.stringify(descriptors));\n    formData.append('params', JSON.stringify(descriptorParams));\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage(response.data.result);\n      setImageUrls(Array.isArray(response.data.images) ? response.data.images : []);\n    } catch (error) {\n      setMessage('Ha ocurrido un error.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const defaultValues = {\n    'Diferencias Pesadas': {\n      'peso': '5'\n    },\n    'Fuzzy': {\n      'threshold': '120'\n    },\n    'Wavelet Entropy': {\n      'wavelet': 'db2',\n      'level': '5'\n    },\n    'High Low Ratio': {\n      'fs': '1.0'\n    },\n    'Filtro Bajo': {\n      'fmin': '0.015',\n      'fmax': '0.05',\n      'at_paso': '1',\n      'at_rechazo': '40',\n      'fs': '1.0'\n    },\n    'Filtro Medio': {\n      'fmin': '0.05',\n      'fmax': '0.25',\n      'at_paso': '1',\n      'at_rechazo': '40',\n      'fs': '1.0'\n    },\n    'Filtro Alto': {\n      'fmin': '0.025',\n      'fmax': '0.4',\n      'at_paso': '1',\n      'at_rechazo': '40',\n      'fs': '1.0'\n    }\n  };\n  const descriptorList = [{\n    name: 'Diferencias Pesadas',\n    params: ['peso']\n  }, {\n    name: 'Diferencias Promediadas',\n    params: []\n  }, {\n    name: 'Fujii',\n    params: []\n  }, {\n    name: 'Desviacion Estandar',\n    params: []\n  }, {\n    name: 'Contraste Temporal',\n    params: []\n  }, {\n    name: 'Media',\n    params: []\n  }, {\n    name: 'Autocorrelacion',\n    params: []\n  }, {\n    name: 'Fuzzy',\n    params: ['threshold']\n  }, {\n    name: 'Wavelet Entropy',\n    params: ['wavelet', 'level']\n  }, {\n    name: 'High Low Ratio',\n    params: ['fs']\n  }, {\n    name: 'Filtro Bajo',\n    params: ['fmin', 'fmax', 'at_paso', 'at_rechazo', 'fs']\n  }, {\n    name: 'Filtro Medio',\n    params: ['fmin', 'fmax', 'at_paso', 'at_rechazo', 'fs']\n  }, {\n    name: 'Filtro Alto',\n    params: ['fmin', 'fmax', 'at_paso', 'at_rechazo', 'fs']\n  }];\n  const isAnyDescriptorSelected = Object.values(selectedDescriptors).some(checked => checked);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/avi\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), descriptorsVisible && /*#__PURE__*/_jsxDEV(DescriptorSelection, {\n      descriptorList: descriptorList,\n      selectedDescriptors: selectedDescriptors,\n      descriptorParams: descriptorParams,\n      onDescriptorChange: handleDescriptorChange,\n      onParamChange: handleParamChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading || !descriptorsVisible || !isAnyDescriptorSelected,\n      children: loading ? 'Cargando...' : 'Enviar Descriptores'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }, this), imageUrls.length > 0 && imageUrls.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: image.descriptor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000${image.url}`,\n        alt: `Mapa de colores generado ${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `http://localhost:5000${image.url}`,\n        download: true,\n        children: [\"Descargar imagen de \", image.descriptor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadVideo, \"96xfH1yWyizlXWX3xNmdBap1xmg=\");\n_c = UploadVideo;\nexport default UploadVideo;\nvar _c;\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"names":["React","useState","axios","DescriptorSelection","jsxDEV","_jsxDEV","UploadVideo","_s","video","setVideo","message","setMessage","loading","setLoading","imageUrls","setImageUrls","selectedDescriptors","setSelectedDescriptors","descriptorsVisible","setDescriptorsVisible","descriptorParams","setDescriptorParams","handleFileChange","event","target","files","handleDescriptorChange","name","checked","prev","defaultValues","handleParamChange","descriptor","param","value","handleUpload","formData","FormData","append","descriptors","Object","keys","filter","key","JSON","stringify","response","post","headers","data","result","Array","isArray","images","error","descriptorList","params","isAnyDescriptorSelected","values","some","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onDescriptorChange","onParamChange","onClick","disabled","length","map","image","index","src","url","alt","href","download","_c","$RefreshReg$"],"sources":["C:/Users/Igna/Documents/GitHub/Speckle/frontend/src/subirVideos.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport DescriptorSelection from './DescriptorSelection';\r\n\r\nconst UploadVideo = () => {\r\n    const [video, setVideo] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [imageUrls, setImageUrls] = useState([]);\r\n    const [selectedDescriptors, setSelectedDescriptors] = useState({});\r\n    const [descriptorsVisible, setDescriptorsVisible] = useState(false);\r\n    const [descriptorParams, setDescriptorParams] = useState({});\r\n    \r\n    const handleFileChange = (event) => {\r\n        setVideo(event.target.files[0]);\r\n        setDescriptorsVisible(true);\r\n    };\r\n\r\n    const handleDescriptorChange = (event) => {\r\n        const { name, checked } = event.target;\r\n        setSelectedDescriptors((prev) => ({\r\n            ...prev,\r\n            [name]: checked,\r\n        }));\r\n\r\n        if (checked && defaultValues[name]) {\r\n            setDescriptorParams((prev) => ({\r\n                ...prev,\r\n                [name]: defaultValues[name],\r\n            }));\r\n        } else if (!checked) {\r\n            setDescriptorParams((prev) => ({\r\n                ...prev,\r\n                [name]: {},\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleParamChange = (descriptor, param, value) => {\r\n        setDescriptorParams((prev) => ({\r\n            ...prev,\r\n            [descriptor]: {\r\n                ...prev[descriptor],\r\n                [param]: value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!video) {\r\n            setMessage('Por favor, selecciona un video.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('video', video);\r\n\r\n        const descriptors = Object.keys(selectedDescriptors).filter(key => selectedDescriptors[key]);\r\n        formData.append('descriptors', JSON.stringify(descriptors));\r\n        formData.append('params', JSON.stringify(descriptorParams));\r\n\r\n        setLoading(true);\r\n        setMessage('');\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/upload', formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n            });\r\n            setMessage(response.data.result);\r\n            setImageUrls(Array.isArray(response.data.images) ? response.data.images : []);\r\n        } catch (error) {\r\n            setMessage('Ha ocurrido un error.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const defaultValues = {\r\n        'Diferencias Pesadas': { 'peso': '5' }, \r\n        'Fuzzy': { 'threshold': '120' },  \r\n        'Wavelet Entropy': { 'wavelet':'db2','level': '5' },\r\n        'High Low Ratio': { 'fs': '1.0' },\r\n        'Filtro Bajo': { 'fmin': '0.015', 'fmax':'0.05', 'at_paso':'1', 'at_rechazo':'40', 'fs':'1.0' },\r\n        'Filtro Medio': { 'fmin': '0.05', 'fmax':'0.25', 'at_paso':'1', 'at_rechazo':'40', 'fs':'1.0' },\r\n        'Filtro Alto': { 'fmin': '0.025', 'fmax':'0.4', 'at_paso':'1', 'at_rechazo':'40', 'fs':'1.0' },\r\n    };\r\n\r\n    const descriptorList = [\r\n        { name: 'Diferencias Pesadas', params: ['peso'] },\r\n        { name: 'Diferencias Promediadas', params: [] },\r\n        { name: 'Fujii', params: [] },\r\n        { name: 'Desviacion Estandar', params: [] },\r\n        { name: 'Contraste Temporal', params: [] },\r\n        { name: 'Media', params: [] },\r\n        { name: 'Autocorrelacion', params: [] },\r\n        { name: 'Fuzzy', params: ['threshold'] },\r\n        { name: 'Wavelet Entropy', params: ['wavelet', 'level'] },\r\n        { name: 'High Low Ratio', params: ['fs'] },\r\n        { name: 'Filtro Bajo', params: ['fmin', 'fmax', 'at_paso', 'at_rechazo', 'fs'] },\r\n        { name: 'Filtro Medio', params: ['fmin', 'fmax', 'at_paso', 'at_rechazo', 'fs'] },\r\n        { name: 'Filtro Alto', params: ['fmin', 'fmax', 'at_paso', 'at_rechazo', 'fs'] },\r\n    ];\r\n\r\n    const isAnyDescriptorSelected = Object.values(selectedDescriptors).some(checked => checked);\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" accept=\"video/avi\" onChange={handleFileChange} />\r\n            \r\n            {descriptorsVisible && (\r\n                <DescriptorSelection \r\n                    descriptorList={descriptorList} \r\n                    selectedDescriptors={selectedDescriptors}\r\n                    descriptorParams={descriptorParams}\r\n                    onDescriptorChange={handleDescriptorChange}\r\n                    onParamChange={handleParamChange}\r\n                />\r\n            )}\r\n\r\n            <button onClick={handleUpload} disabled={loading || !descriptorsVisible || !isAnyDescriptorSelected}>\r\n                {loading ? 'Cargando...' : 'Enviar Descriptores'}\r\n            </button>\r\n\r\n            {message && <p>{message}</p>}\r\n            {imageUrls.length > 0 && imageUrls.map((image, index) => (\r\n                <div key={index}>\r\n                    <h5>{image.descriptor}</h5>\r\n                    <img src={`http://localhost:5000${image.url}`} alt={`Mapa de colores generado ${index}`} />\r\n                    <a href={`http://localhost:5000${image.url}`} download>Descargar imagen de {image.descriptor}</a>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadVideo;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClE,MAAM,CAACiB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAMqB,gBAAgB,GAAIC,KAAK,IAAK;IAChCd,QAAQ,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/BN,qBAAqB,CAAC,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMO,sBAAsB,GAAIH,KAAK,IAAK;IACtC,MAAM;MAAEI,IAAI;MAAEC;IAAQ,CAAC,GAAGL,KAAK,CAACC,MAAM;IACtCP,sBAAsB,CAAEY,IAAI,KAAM;MAC9B,GAAGA,IAAI;MACP,CAACF,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;IAEH,IAAIA,OAAO,IAAIE,aAAa,CAACH,IAAI,CAAC,EAAE;MAChCN,mBAAmB,CAAEQ,IAAI,KAAM;QAC3B,GAAGA,IAAI;QACP,CAACF,IAAI,GAAGG,aAAa,CAACH,IAAI;MAC9B,CAAC,CAAC,CAAC;IACP,CAAC,MAAM,IAAI,CAACC,OAAO,EAAE;MACjBP,mBAAmB,CAAEQ,IAAI,KAAM;QAC3B,GAAGA,IAAI;QACP,CAACF,IAAI,GAAG,CAAC;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACpDb,mBAAmB,CAAEQ,IAAI,KAAM;MAC3B,GAAGA,IAAI;MACP,CAACG,UAAU,GAAG;QACV,GAAGH,IAAI,CAACG,UAAU,CAAC;QACnB,CAACC,KAAK,GAAGC;MACb;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC3B,KAAK,EAAE;MACRG,UAAU,CAAC,iCAAiC,CAAC;MAC7C;IACJ;IAEA,MAAMyB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE9B,KAAK,CAAC;IAE/B,MAAM+B,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACzB,mBAAmB,CAAC,CAAC0B,MAAM,CAACC,GAAG,IAAI3B,mBAAmB,CAAC2B,GAAG,CAAC,CAAC;IAC5FP,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEM,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC,CAAC;IAC3DH,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEM,IAAI,CAACC,SAAS,CAACzB,gBAAgB,CAAC,CAAC;IAE3DP,UAAU,CAAC,IAAI,CAAC;IAChBF,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACA,MAAMmC,QAAQ,GAAG,MAAM5C,KAAK,CAAC6C,IAAI,CAAC,8BAA8B,EAAEX,QAAQ,EAAE;QACxEY,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACrD,CAAC,CAAC;MACFrC,UAAU,CAACmC,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;MAChCnC,YAAY,CAACoC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACG,IAAI,CAACI,MAAM,CAAC,GAAGP,QAAQ,CAACG,IAAI,CAACI,MAAM,GAAG,EAAE,CAAC;IACjF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ3C,UAAU,CAAC,uBAAuB,CAAC;IACvC,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMiB,aAAa,GAAG;IAClB,qBAAqB,EAAE;MAAE,MAAM,EAAE;IAAI,CAAC;IACtC,OAAO,EAAE;MAAE,WAAW,EAAE;IAAM,CAAC;IAC/B,iBAAiB,EAAE;MAAE,SAAS,EAAC,KAAK;MAAC,OAAO,EAAE;IAAI,CAAC;IACnD,gBAAgB,EAAE;MAAE,IAAI,EAAE;IAAM,CAAC;IACjC,aAAa,EAAE;MAAE,MAAM,EAAE,OAAO;MAAE,MAAM,EAAC,MAAM;MAAE,SAAS,EAAC,GAAG;MAAE,YAAY,EAAC,IAAI;MAAE,IAAI,EAAC;IAAM,CAAC;IAC/F,cAAc,EAAE;MAAE,MAAM,EAAE,MAAM;MAAE,MAAM,EAAC,MAAM;MAAE,SAAS,EAAC,GAAG;MAAE,YAAY,EAAC,IAAI;MAAE,IAAI,EAAC;IAAM,CAAC;IAC/F,aAAa,EAAE;MAAE,MAAM,EAAE,OAAO;MAAE,MAAM,EAAC,KAAK;MAAE,SAAS,EAAC,GAAG;MAAE,YAAY,EAAC,IAAI;MAAE,IAAI,EAAC;IAAM;EACjG,CAAC;EAED,MAAMyB,cAAc,GAAG,CACnB;IAAE5B,IAAI,EAAE,qBAAqB;IAAE6B,MAAM,EAAE,CAAC,MAAM;EAAE,CAAC,EACjD;IAAE7B,IAAI,EAAE,yBAAyB;IAAE6B,MAAM,EAAE;EAAG,CAAC,EAC/C;IAAE7B,IAAI,EAAE,OAAO;IAAE6B,MAAM,EAAE;EAAG,CAAC,EAC7B;IAAE7B,IAAI,EAAE,qBAAqB;IAAE6B,MAAM,EAAE;EAAG,CAAC,EAC3C;IAAE7B,IAAI,EAAE,oBAAoB;IAAE6B,MAAM,EAAE;EAAG,CAAC,EAC1C;IAAE7B,IAAI,EAAE,OAAO;IAAE6B,MAAM,EAAE;EAAG,CAAC,EAC7B;IAAE7B,IAAI,EAAE,iBAAiB;IAAE6B,MAAM,EAAE;EAAG,CAAC,EACvC;IAAE7B,IAAI,EAAE,OAAO;IAAE6B,MAAM,EAAE,CAAC,WAAW;EAAE,CAAC,EACxC;IAAE7B,IAAI,EAAE,iBAAiB;IAAE6B,MAAM,EAAE,CAAC,SAAS,EAAE,OAAO;EAAE,CAAC,EACzD;IAAE7B,IAAI,EAAE,gBAAgB;IAAE6B,MAAM,EAAE,CAAC,IAAI;EAAE,CAAC,EAC1C;IAAE7B,IAAI,EAAE,aAAa;IAAE6B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI;EAAE,CAAC,EAChF;IAAE7B,IAAI,EAAE,cAAc;IAAE6B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI;EAAE,CAAC,EACjF;IAAE7B,IAAI,EAAE,aAAa;IAAE6B,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,IAAI;EAAE,CAAC,CACnF;EAED,MAAMC,uBAAuB,GAAGjB,MAAM,CAACkB,MAAM,CAAC1C,mBAAmB,CAAC,CAAC2C,IAAI,CAAC/B,OAAO,IAAIA,OAAO,CAAC;EAE3F,oBACIvB,OAAA;IAAAuD,QAAA,gBACIvD,OAAA;MAAOwD,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,WAAW;MAACC,QAAQ,EAAEzC;IAAiB;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEnEjD,kBAAkB,iBACfb,OAAA,CAACF,mBAAmB;MAChBoD,cAAc,EAAEA,cAAe;MAC/BvC,mBAAmB,EAAEA,mBAAoB;MACzCI,gBAAgB,EAAEA,gBAAiB;MACnCgD,kBAAkB,EAAE1C,sBAAuB;MAC3C2C,aAAa,EAAEtC;IAAkB;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACJ,eAED9D,OAAA;MAAQiE,OAAO,EAAEnC,YAAa;MAACoC,QAAQ,EAAE3D,OAAO,IAAI,CAACM,kBAAkB,IAAI,CAACuC,uBAAwB;MAAAG,QAAA,EAC/FhD,OAAO,GAAG,aAAa,GAAG;IAAqB;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EAERzD,OAAO,iBAAIL,OAAA;MAAAuD,QAAA,EAAIlD;IAAO;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BrD,SAAS,CAAC0D,MAAM,GAAG,CAAC,IAAI1D,SAAS,CAAC2D,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChDtE,OAAA;MAAAuD,QAAA,gBACIvD,OAAA;QAAAuD,QAAA,EAAKc,KAAK,CAAC1C;MAAU;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3B9D,OAAA;QAAKuE,GAAG,EAAE,wBAAwBF,KAAK,CAACG,GAAG,EAAG;QAACC,GAAG,EAAE,4BAA4BH,KAAK;MAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3F9D,OAAA;QAAG0E,IAAI,EAAE,wBAAwBL,KAAK,CAACG,GAAG,EAAG;QAACG,QAAQ;QAAApB,QAAA,GAAC,sBAAoB,EAACc,KAAK,CAAC1C,UAAU;MAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAH3FQ,KAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC5D,EAAA,CAjIID,WAAW;AAAA2E,EAAA,GAAX3E,WAAW;AAmIjB,eAAeA,WAAW;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}