{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Igna\\\\Documents\\\\GitHub\\\\Speckle\\\\frontend\\\\src\\\\DescriptorSelection.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DescriptorSelection = ({\n  descriptorList,\n  selectedDescriptors,\n  descriptorParams,\n  onDescriptorChange,\n  onParamChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: descriptorList.map((descriptor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: descriptor.name,\n          checked: selectedDescriptors[descriptor.name] || false,\n          onChange: onDescriptorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 25\n        }, this), descriptor.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }, this), selectedDescriptors[descriptor.name] && descriptor.params && descriptor.params.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: descriptor.params.map((param, i) => {\n          var _descriptorParams$des;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [param, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ((_descriptorParams$des = descriptorParams[descriptor.name]) === null || _descriptorParams$des === void 0 ? void 0 : _descriptorParams$des[param]) || '',\n              onChange: e => onParamChange(descriptor.name, param, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = DescriptorSelection;\nexport default DescriptorSelection;\nvar _c;\n$RefreshReg$(_c, \"DescriptorSelection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DescriptorSelection","descriptorList","selectedDescriptors","descriptorParams","onDescriptorChange","onParamChange","children","map","descriptor","index","type","name","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","params","length","param","i","_descriptorParams$des","value","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Igna/Documents/GitHub/Speckle/frontend/src/DescriptorSelection.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DescriptorSelection = ({ descriptorList, selectedDescriptors, descriptorParams, onDescriptorChange, onParamChange }) => {\r\n    return (\r\n        <div>\r\n            {descriptorList.map((descriptor, index) => (\r\n                <div key={index}>\r\n                    <label>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            name={descriptor.name} \r\n                            checked={selectedDescriptors[descriptor.name] || false} \r\n                            onChange={onDescriptorChange} \r\n                        />\r\n                        {descriptor.name}\r\n                    </label>\r\n                    {selectedDescriptors[descriptor.name] && descriptor.params && descriptor.params.length > 0 && (\r\n                        <div>\r\n                            {descriptor.params.map((param, i) => (\r\n                                <div key={i}>\r\n                                    <label>{param}:</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        value={descriptorParams[descriptor.name]?.[param] || ''} \r\n                                        onChange={(e) => onParamChange(descriptor.name, param, e.target.value)} \r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DescriptorSelection;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,cAAc;EAAEC,mBAAmB;EAAEC,gBAAgB;EAAEC,kBAAkB;EAAEC;AAAc,CAAC,KAAK;EAC1H,oBACIN,OAAA;IAAAO,QAAA,EACKL,cAAc,CAACM,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAClCV,OAAA;MAAAO,QAAA,gBACIP,OAAA;QAAAO,QAAA,gBACIP,OAAA;UACIW,IAAI,EAAC,UAAU;UACfC,IAAI,EAAEH,UAAU,CAACG,IAAK;UACtBC,OAAO,EAAEV,mBAAmB,CAACM,UAAU,CAACG,IAAI,CAAC,IAAI,KAAM;UACvDE,QAAQ,EAAET;QAAmB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,EACDT,UAAU,CAACG,IAAI;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,EACPf,mBAAmB,CAACM,UAAU,CAACG,IAAI,CAAC,IAAIH,UAAU,CAACU,MAAM,IAAIV,UAAU,CAACU,MAAM,CAACC,MAAM,GAAG,CAAC,iBACtFpB,OAAA;QAAAO,QAAA,EACKE,UAAU,CAACU,MAAM,CAACX,GAAG,CAAC,CAACa,KAAK,EAAEC,CAAC;UAAA,IAAAC,qBAAA;UAAA,oBAC5BvB,OAAA;YAAAO,QAAA,gBACIP,OAAA;cAAAO,QAAA,GAAQc,KAAK,EAAC,GAAC;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvBlB,OAAA;cACIW,IAAI,EAAC,MAAM;cACXa,KAAK,EAAE,EAAAD,qBAAA,GAAAnB,gBAAgB,CAACK,UAAU,CAACG,IAAI,CAAC,cAAAW,qBAAA,uBAAjCA,qBAAA,CAAoCF,KAAK,CAAC,KAAI,EAAG;cACxDP,QAAQ,EAAGW,CAAC,IAAKnB,aAAa,CAACG,UAAU,CAACG,IAAI,EAAES,KAAK,EAAEI,CAAC,CAACC,MAAM,CAACF,KAAK;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1E,CAAC;UAAA,GANII,CAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAON,CAAC;QAAA,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA,GAvBKR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwBV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACS,EAAA,GAhCI1B,mBAAmB;AAkCzB,eAAeA,mBAAmB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}